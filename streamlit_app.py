import streamlit as st
from openai import OpenAI

# === C·∫§U H√åNH GIAO DI·ªÜN ===
st.set_page_config(page_title="Chatbot V·∫≠t L√Ω", page_icon="‚ö°", layout="centered")

# CSS phong c√°ch nƒÉng ƒë·ªông, th√¢n thi·ªán v·ªõi h·ªçc sinh
st.markdown("""
    <style>
        .stApp {
            background: linear-gradient(135deg, #d1f4ff, #fff9c4);
            font-family: 'Segoe UI', sans-serif;
        }
        h1 {
            text-align: center;
            color: #0d47a1;
        }
        .subtitle {
            text-align: center;
            font-size: 18px;
            color: #1565c0;
            margin-bottom: 20px;
        }
        .author {
            text-align: center;
            font-size: 15px;
            color: #555;
            margin-top: 10px;
            font-style: italic;
        }
        .stChatInput input {
            border-radius: 10px;
            border: 1.5px solid #42a5f5;
        }
        .stMarkdown {
            font-size: 16px;
            line-height: 1.6;
        }
    </style>
""", unsafe_allow_html=True)

# === TI√äU ƒê·ªÄ & M√î T·∫¢ ===
st.title("‚ö° Chatbot V·∫≠t L√Ω ‚ö°")
st.markdown('<p class="subtitle">Kh√°m ph√° V·∫≠t L√Ω d·ªÖ hi·ªÉu c√πng tr√≠ tu·ªá nh√¢n t·∫°o ‚Äì h·ªçc nhanh, hi·ªÉu s√¢u, s√°ng t·∫°o kh√¥ng gi·ªõi h·∫°n! üáªüá≥</p>', unsafe_allow_html=True)
st.markdown('<p class="author">T√°c gi·∫£: <b>Ho√†ng L√¢n</b></p>', unsafe_allow_html=True)

# === K·∫æT N·ªêI OPENAI ===
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# === L∆ØU L·ªäCH S·ª¨ H·ªòI THO·∫†I ===
if "messages" not in st.session_state:
    st.session_state.messages = [
       {"role": "system", "content": 'B·∫°n l√† ng∆∞·ªùi tr·∫ª Vi·ªát Nam hi·ªán nay c√≥ c√°ch n√≥i chuy·ªán ƒë·∫∑c tr∆∞ng b·ªüi s·ª± nƒÉng ƒë·ªông, s·ª≠ d·ª•ng ng√¥n ng·ªØ ƒëa d·∫°ng, bao g·ªìm t·ª´ ng·ªØ ti·∫øng Vi·ªát s√°ng t·∫°o, ti·∫øng Anh (ch√®n ti·∫øng Anh). C√°ch di·ªÖn ƒë·∫°t th∆∞·ªùng ng·∫Øn g·ªçn, s·ª≠ d·ª•ng icon, emoji, meme, hashtag. Giao ti·∫øp th∆∞·ªùng ƒëi th·∫≥ng v√†o v·∫•n ƒë·ªÅ, tr√°nh r∆∞·ªùm r√†, ph√π h·ª£p v·ªõi t·ªëc ƒë·ªô th√¥ng tin hi·ªán ƒë·∫°i. Gi·ªõi tr·∫ª th√≠ch s·ª≠ d·ª•ng ng√¥n ng·ªØ ƒë·ªÉ th·ªÉ hi·ªán b·∫£n th√¢n, th·ªÉ hi·ªán quan ƒëi·ªÉm c√° nh√¢n, v√† ƒë√¥i khi l√† s·ª± "kh√°c bi·ªát" ƒë·ªÉ t·∫°o d·∫•u ·∫•n ri√™ng.'}
    ]
# === HI·ªÇN TH·ªä TIN NH·∫ÆN TR∆Ø·ªöC ===
for msg in st.session_state.messages[1:]:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# === √î NH·∫¨P TIN NH·∫ÆN ===
if prompt := st.chat_input("Nh·∫≠p c√¢u h·ªèi ho·∫∑c ch·ªß ƒë·ªÅ V·∫≠t L√Ω b·∫°n mu·ªën h·ªçc..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    try:
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=st.session_state.messages,
            stream=True,
        )

        # Ghi ph·∫£n h·ªìi ra giao di·ªán
        with st.chat_message("assistant"):
            reply = st.write_stream(response)
        st.session_state.messages.append({"role": "assistant", "content": reply})

    except Exception as e:
        st.error(f"L·ªói: {e}")
